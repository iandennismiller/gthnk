#!/usr/bin/env python3

import os
import sys
import json
import glob
import logging
import datetime

import click
from dotenv import load_dotenv
load_dotenv()

from gthnk import Gthnk
from gthnk.filebuffer import FileBuffer


@click.group()
def cli():
    pass

@cli.command()
def path():
    "Display the path of the journal filetree"
    g = Gthnk(config_filename=os.getenv("GTHNK_CONFIG"))
    print(g.filetree.get_path())

@cli.command()
@click.option('--date', is_flag=True, default=False, help="Print only the date")
@click.option('--uri', is_flag=True, default=False, help="Print only the uri")
@click.argument('query', nargs=-1)
def search(date, uri, query):
    "Search the journal for a query"
    g = Gthnk(config_filename=os.getenv("GTHNK_CONFIG"))

    # load all days if lazy
    if g.lazy:
        g.filetree.load_all_days()

    query_str = " ".join(query)
    print(f"Query: {query_str}")
    for entry in g.journal.search(query_str):
        if date and uri:
            print(entry.day.get_uri())
        elif date:
            print(entry.day.day_id)
        elif uri:
            print(entry.get_uri())
        else:
            print(entry.render_standalone())

# @cli.command()
# def config():
#     g = Gthnk(config_filename=os.getenv("GTHNK_CONFIG"))
#     print(json.dumps(g.config, indent=2, sort_keys=True))

# @cli.command()
# def rotate():
#     "Import file buffers and rotate them"
#     g = Gthnk(config_filename=os.getenv("GTHNK_CONFIG"))

@cli.command()
@click.argument('filename')
def read(filename):
    "Read a file buffer and import it into the journal"
    g = Gthnk(config_filename=os.getenv("GTHNK_CONFIG"))
    fb = FileBuffer(filename, journal=g.journal)
    g.filetree.write_journal()
    print(g.journal)


if __name__ == '__main__':
    cli()
